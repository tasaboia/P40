datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}
enum Role {
  ADMIN
  USER
  LEADER
}

enum PrayerTurnType {
  SHIFT // turnos de oração
  CLOCK // relógio de oração
}

model Region {
  id        String   @id @default(uuid())
  name      String   @unique
  code      String   @unique
  churchs   Church[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Church {
  id        String   @id @default(uuid())
  name      String   @unique   
  address   String?
  city      String
  country   String
  regionId  String
  region    Region   @relation(fields: [regionId], references: [id])
  timezone  String    
  events    Event[]
  users     User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Event {
  id                        String   @id @default(uuid())
  churchId                  String
  church                    Church     @relation(fields: [churchId], references: [id])
  name                      String
  startDate                 DateTime
  type                      PrayerTurnType @default(SHIFT)
  endDate                   DateTime
  description               String?
  prayerTurns               PrayerTurn[]
  prayerTopics              DailyPrayerTopic[]
  maxParticipantsPerTurn    Int?    @default(2)     
  shiftDuration             Int?    @default(60) //em minutos  
  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @updatedAt
}

model PrayerTurn {
  id                    String   @id @default(uuid())
  eventId               String
  event                 Event    @relation(fields: [eventId], references: [id])
  type                  PrayerTurnType
  startTime             String   
  endTime               String   
  duration              Int      @default(60) 
  userShifts            UserShift[]
  weekday               Int?
  allowChangeAfterStart Boolean @default(true)
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
}

model UserShift {
  id           String  @id @default(uuid())
  userId       String
  prayerTurnId String
  user         User     @relation(fields: [userId], references: [id])
  prayerTurn   PrayerTurn @relation(fields: [prayerTurnId], references: [id])
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@unique([userId, prayerTurnId], name: "user_prayerTurn_unique")
}

model User {
  id         String   @id @default(uuid())
  idProver   String?   @unique
  name       String
  whatsapp   String?  
  email      String   @unique 
  imageUrl   String?  
  role       Role     @default(USER)
  userShifts UserShift[]
  onboarding  Boolean @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  churchId   String?   
  church     Church?  @relation(fields: [churchId], references: [id])
}

model DailyPrayerTopic {
  id          String  @id @default(uuid())
  eventId     String
  event       Event   @relation(fields: [eventId], references: [id])
  date        DateTime
  description String?
  imageUrl    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
