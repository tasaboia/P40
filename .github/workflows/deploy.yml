name: Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    name: üöÄ Deploy to Production
    runs-on: ubuntu-latest

    # Definir permiss√µes necess√°rias para o deploy
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "yarn"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Generate Prisma client
        run: yarn prisma generate

      - name: Build application
        run: yarn build
        env:
          # Defina as vari√°veis de ambiente para produ√ß√£o
          NODE_ENV: production

      # Executar migra√ß√µes do banco de dados
      # Nota: isto requer que o banco de dados seja acess√≠vel ou usar√° um proxy
      - name: Run migrations
        run: yarn prisma migrate deploy
        env:
          # Use secrets para o banco de dados de produ√ß√£o
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      # Exemplo de deploy no Vercel (voc√™ pode alterar conforme sua plataforma de hospedagem)
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: "--prod"

      # Notifica√ß√£o de deploy bem-sucedido
      - name: Notify successful deployment
        if: success()
        # Voc√™ pode integrar com Slack, Discord, email, etc.
        run: echo "Deploy to production was successful!"
